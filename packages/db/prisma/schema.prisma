generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator kysely {
//   provider             = "prisma-kysely"
//   output               = "../src"
//   fileName             = "types.ts"
//   // Optionally generate runtime enums to a separate file
//   enumFileName         = "enums.ts"
//   decimalTypeOverride  = "number"
//   dateTimeTypeOverride = "string"
//   previewFeatures      = ["prismaSchemaFolder"]
// }

model Post {
  id         String   @id @unique @default(uuid())
  title      String
  content    String
  published  Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  author_id  String

  // Relation to the Comment model
  comments Comment[] @relation("PostComments")

  @@map("posts") // Explicitly sets the table name to "post"
}

model Comment {
  id            String    @id @unique @default(uuid())
  incrementalId Int       @unique @default(autoincrement())
  content       String    @db.VarChar(500) // Limit comment length to 500 characters
  postId        String // Each comment is associated with a post
  parentId      String? // Nullable field for the parent comment (null means top-level comment)
  createdAt     DateTime  @default(now()) // Automatically set to the current timestamp
  updatedAt     DateTime  @default(now()) // Automatically updated on modification
  deletedAt     DateTime? // Optional field for soft deletion (null means not deleted)

  // Self-relation for nested comments
  parent  Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies Comment[] @relation("CommentReplies")

  // Relation to the Post model
  post Post @relation("PostComments", fields: [postId], references: [id])

  @@map("comments") // Explicitly sets the table name to "post"
}
